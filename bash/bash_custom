#!/bin/bash
# license: https://github.com/rolfvreijdenberger/dotfiles/LICENSE
# sourced by ~/.bashrc


# predefined color settings
bold='\[$(tput bold)\]'
grey='\[\033[1;30m\]'
red='\[\033[0;31m\]'
RED='\[\033[1;31m\]'
green='\[\033[0;32m\]'
GREEN='\[\033[1;32m\]'
yellow='\[\033[0;33m\]'
YELLOW='\[\033[1;33m\]'
purple='\[\033[0;35m\]'
PURPLE='\[\033[1;35m\]'
white='\[\033[0;37m\]'
WHITE='\[\033[1;37m\]'
blue='\[\033[0;34m\]'
BLUE='\[\033[1;34m\]'
cyan='\[\033[0;36m\]'
CYAN='\[\033[1;36m\]'
NC='\[$(tput sgr0)\]'


# locale settings
# export LC_ALL="en_GB.UTF-8"
# export LANG="en_GB.UTF-8"


# use vim for everything
export VISUAL=vim
export EDITOR=vim
set -o vi


# bash shell prompt
# http://bashrcgenerator.com/
_generate_ps1() {
  last_status="$?"
  if [ $last_status -eq 0 ]; then
    export PS1="${cyan}\u${red}@${cyan}\h${NC}[${yellow}\W${NC}]:${green}${last_status}${NC}:${red}\\$ ${NC}"
  else
    export PS1="${cyan}\u${red}@${cyan}\h${NC}[${yellow}\w${NC}]:${red}${bold}${last_status}${NC}:${red}\\$ ${NC}"
  fi
}

# history settings for multipe terminals
# see https://unix.stackexchange.com/questions/1288/preserve-bash-history-in-multiple-terminal-windows
export HISTSIZE=20000
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups:erasedups
export HISTTIMEFORMAT='%Y-%m-%d %H:%M.%S | '
shopt -s histappend
unset PROMPT_COMMAND

# synch bash history
_bash_history_sync() {
  builtin history -a
  HISTFILESIZE=$HISTSIZE
  builtin history -c
  builtin history -r
}

# used for logic prior to prompt generation
_render_prompt() {
  _generate_ps1
  _bash_history_sync
}

# this value is executed as a command prior to issuing each primary prompt 
# so make sure all stuff that needs to be done
export PROMPT_COMMAND=_render_prompt

# override original history to sync
history() {
  _bash_history_sync
  builtin history "$@"
}


# color options for utils
export LS_OPTIONS='--color=auto'
#eval "`dircolors`"
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias ls='ls --color=auto'
# colors for less, useful in manpages
export LESS_TERMCAP_mb=$(printf '\e[01;31m') # enter blinking mode - red
export LESS_TERMCAP_md=$(printf '\e[01;33m') # enter double-bright mode - bold, magenta
export LESS_TERMCAP_me=$(printf '\e[0m') # turn off all appearance modes (mb, md, so, us)
export LESS_TERMCAP_se=$(printf '\e[0m') # leave standout mode
export LESS_TERMCAP_so=$(printf '\e[01;35m') # enter standout mode - yellow
export LESS_TERMCAP_ue=$(printf '\e[0m') # leave underline mode
export LESS_TERMCAP_us=$(printf '\e[04;36m') # enter underline mode - cyan

# aliases
alias myip='curl icanhazip.com/s'


# some OS specific switching
case "$OSTYPE" in
  darwin*) #mac
    # gpg agent for ssh authentication
    # https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html#Invoking-GPG_002dAGENT
    export "GPG_TTY=$(tty)"
    export "SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh"
    # eval $(gpg-agent --daemon --enable-ssh-support)
    # eval $(keychain --eval --quiet)
    ;;
  linux*)
    export "GPG_TTY=$(tty)"
    export "SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh"
    ;;
  bsd*)
    echo "BSD"
    ;;
  *)
    echo "unhandled os: $OSTYPE"
    ;;
esac

# no longer needed for gpg 2.2
if [ -f "${HOME}/.gpg-agent-info" ]; then
  . "${HOME}/.gpg-agent-info"
  export GPG_AGENT_INFO
  export SSH_AUTH_SOCK
fi
